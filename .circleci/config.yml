version: '2.1'

orbs:
  docker: circleci/docker@2.1.4
  aws-cli: circleci/aws-cli@1.4.0

jobs:
  build-and-push-docker-image:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: mivodu/udacity-capstone-hello-michael #$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
      - docker/push:
          digest-path: /tmp/digest.txt
          image: mivodu/udacity-capstone-hello-michael
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"

#  docker/publish:
#    executor:
#      image: circleci/node
#      name: docker/docker
#      tag: boron-browsers
#    image: my/image
#    remote-docker-dlc: true
#    tag: my-tag
#    use-remote-docker: true   
#    deploy: false #do not publish yet       
  check-stack-availability:
    executor: aws-cli/default
    steps:
      - aws-cli/setup
      - run:
          name: check cloudformation stack
          command: |
            if aws cloudformation list-stacks --stack-status-filter CREATE_COMPLETE | grep -F '"StackName": "Udacity-Capstone-Hello-Michael"'
            then
              echo "stack already exists"
            else
              echo "stack does not exist yet"
            fi
  lint-cfn:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run:
          name: Validate CloudFormation template
          command: pip install cfn-lint && cfn-lint temp.yml            
  deploy-cfn:
    parameters:
      stack-name:
        description: Name of the CloudFormation stack
        type: string
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup
      - run:
          name: Deploy Cloudformation Template
          command: |
            aws cloudformation deploy \
            --template temp.yml \
            --stack << parameters.stack-name >> \
          no_output_timeout: 30m

#  - when:
#    condition:
#      or:
#        - and:
#          - equal: [ main, << pipeline.git.branch >> ]
#          - or: [ << pipeline.parameters.param1 >>, << pipeline.parameters.param2 >> ]
#        - or:
#          - equal: [ false, << pipeline.parameters.param1 >> ]
#    steps:
#      - run: echo "I am on main AND param1 is true OR param2 is true -- OR param1 is false"

workflows:
  jobs:
    - docker/hadolint
    - build-and-push-docker-image:
        requires: 
          - docker/hadolint
#    - check-stack-availability
#    - lint-cfn
#    - deploy-cfn:
#        stack-name: Udacity-Capstone-Hello-Michael
#        requires:
#          - lint-cfn



#  conditional-workflow:
#    when:
#      and: # All must be true to trigger
#        - equal: [ main, << pipeline.git.branch >> ]
#        - not: << pipeline.parameters.param1 >>
#        - or: [ << pipeline.parameters.param1 >>, << pipeline.parameters.param2 >> ]
#
#    jobs:
#      - job-on-condition
