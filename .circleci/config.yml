version: '2.1'

orbs:
  docker: circleci/docker@2.1.4
  aws-cli: circleci/aws-cli@3.1
  aws-eks: circleci/aws-eks@2.2
  kubernetes: circleci/kubernetes@1.3.1

jobs:
  build-and-push-docker-image:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check:
          docker-username: DOCKERHUB_LOGIN
          docker-password: DOCKERHUB_PASSWORD
      - docker/build:
          image: mivodu/udacity-capstone-hello-michael #$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
      - docker/push:
          image: mivodu/udacity-capstone-hello-michael
          tag: latest
  check-stack-availability:
    executor: aws-cli/default
    steps:
      - aws-cli/setup
      - run:
          name: check cloudformation stack
          command: |
            if aws cloudformation list-stacks --stack-status-filter CREATE_COMPLETE | grep -F '"StackName": "Udacity-Capstone-Hello-Michael"'
            then
              echo "stack already exists"
            else
              echo "stack does not exist yet"
            fi
  lint-cfn:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run:
          name: Validate CloudFormation template
          command: pip install cfn-lint && cfn-lint temp.yml            
  deploy-cfn:
    parameters:
      stack-name:
        description: Name of the CloudFormation stack
        type: string
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup
      - run:
          name: Deploy Cloudformation Template
          command: |
            aws cloudformation deploy \
            --template temp.yml \
            --stack << parameters.stack-name >> \
          no_output_timeout: 30m
  create-deployment:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: "udacity-capstone-eks-cluster"
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: app-deployment.yaml
          get-rollout-status: true
          resource-name: deployment/hello-michael
#          namespace: test
      - kubernetes/create-or-update-resource:
          resource-file-path: app-service.yaml


#      - kubernetes/create-or-update-resource:
#          get-rollout-status: true
#          resource-file-path: tests/nginx-deployment/deployment.yaml
#          resource-name: deployment/nginx-deployment

#  deploy-application:
#    executor: aws-eks/python3
#    steps:
#      - checkout
#      - aws-eks/update-kubeconfig-with-authenticator:
#          cluster-name: "Udacity-Capstone-Hello-Michael"
#          install-kubectl: true
#          aws-region: "us-east-1"
#      - kubernetes/create-or-update-resource:
#          resource-file-path: "app-deployment.yaml"
#          get-rollout-status: true
#          resource-name: hello-michael
#      - kubernetes/create-or-update-resource:
#          resource-file-path: "app-service.yaml"
workflows:
  default:
   jobs:

    - docker/hadolint
    - build-and-push-docker-image:
        requires: 
          - docker/hadolint
#     - create-deployment
#    - check-stack-availability
#    - lint-cfn
#    - deploy-cfn:
#        stack-name: Udacity-Capstone-Hello-Michael
#        requires:
#          - lint-cfn
